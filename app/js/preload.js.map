{"version":3,"file":"preload.js","sources":["../../src/js/preload.js"],"sourcesContent":["import { contextBridge, ipcRenderer } from 'electron'\n\n// Whitelist channels\n\nlet validSendChannels = ['updateProjectDirectoryStore']\n\nlet validReceiveChannels = ['projectDirectoryStoreUpdated']\n\nlet validInvokeChannels = ['readFile', 'ifPathExists']\n\n// Expose protected methods that allow the renderer process to use the ipcRenderer without exposing the entire object.\ncontextBridge.exposeInMainWorld(\n  'api',\n  {\n    send: (channel, ...args) => {\n      if (validSendChannels.includes(channel)) {\n        ipcRenderer.send(channel, ...args)\n      }\n    },\n\n    receive: (channel, func) => {\n      if (validReceiveChannels.includes(channel)) {\n        // Deliberately strip event as it includes `sender` \n        ipcRenderer.on(channel, (event, ...args) => func(...args))\n      }\n    },\n\n    invoke: (channel, ...args) => {\n      if (validInvokeChannels.includes(channel)) {\n        return ipcRenderer.invoke(channel, ...args)\n      }\n    }\n  }\n)"],"names":["contextBridge","ipcRenderer"],"mappings":";;;;AAEA;AACA;AACA,IAAI,iBAAiB,GAAG,CAAC,6BAA6B,EAAC;AACvD;AACA,IAAI,oBAAoB,GAAG,CAAC,8BAA8B,EAAC;AAC3D;AACA,IAAI,mBAAmB,GAAG,CAAC,UAAU,EAAE,cAAc,EAAC;AACtD;AACA;AACAA,sBAAa,CAAC,iBAAiB;AAC/B,EAAE,KAAK;AACP,EAAE;AACF,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,KAAK;AAChC,MAAM,IAAI,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC/C,QAAQC,oBAAW,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,EAAC;AAC1C,OAAO;AACP,KAAK;AACL;AACA,IAAI,OAAO,EAAE,CAAC,OAAO,EAAE,IAAI,KAAK;AAChC,MAAM,IAAI,oBAAoB,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AAClD;AACA,QAAQA,oBAAW,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,GAAG,IAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,EAAC;AAClE,OAAO;AACP,KAAK;AACL;AACA,IAAI,MAAM,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,KAAK;AAClC,MAAM,IAAI,mBAAmB,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AACjD,QAAQ,OAAOA,oBAAW,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;AACnD,OAAO;AACP,KAAK;AACL,GAAG;AACH"}