{"version":3,"file":"preload.js","sources":["../../src/js/preload.js"],"sourcesContent":["import { contextBridge, ipcRenderer } from 'electron'\n\n// Expose protected methods that allow the renderer process to use\n// the ipcRenderer without exposing the entire object\ncontextBridge.exposeInMainWorld(\n  'api', {\n      send: (channel, data) => {\n          // whitelist channels\n          let validChannels = ['loadFile', 'checkIfPathExists', 'readDirectory', 'watchProjectDirectory'];\n          if (validChannels.includes(channel)) {\n              ipcRenderer.send(channel, data)\n          }\n      },\n      receive: (channel, func) => {\n          let validChannels = ['fileFromMain', 'ifPathExists', 'directoryContents']\n          if (validChannels.includes(channel)) {\n              // Deliberately strip event as it includes `sender` \n              ipcRenderer.on(channel, (event, ...args) => func(...args))\n          }\n      }\n  }\n)"],"names":["contextBridge","ipcRenderer"],"mappings":";;;;AAEA;AACA;AACAA,sBAAa,CAAC,iBAAiB;AAC/B,EAAE,KAAK,EAAE;AACT,MAAM,IAAI,EAAE,CAAC,OAAO,EAAE,IAAI,KAAK;AAC/B;AACA,UAAU,IAAI,aAAa,GAAG,CAAC,UAAU,EAAE,mBAAmB,EAAE,eAAe,EAAE,uBAAuB,CAAC,CAAC;AAC1G,UAAU,IAAI,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC/C,cAAcC,oBAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAC;AAC7C,WAAW;AACX,OAAO;AACP,MAAM,OAAO,EAAE,CAAC,OAAO,EAAE,IAAI,KAAK;AAClC,UAAU,IAAI,aAAa,GAAG,CAAC,cAAc,EAAE,cAAc,EAAE,mBAAmB,EAAC;AACnF,UAAU,IAAI,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC/C;AACA,cAAcA,oBAAW,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,GAAG,IAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,EAAC;AACxE,WAAW;AACX,OAAO;AACP,GAAG;AACH"}