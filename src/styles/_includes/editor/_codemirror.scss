@use "../../_helpers" as *;
@forward "codemirror-hint";
@forward "markdown-elements";

body {
    --editor-leftPadding: 4em;
    --mark-borderRadius: 3px;
}



/* ---------- BASE ---------- */

// From: https://github.com/codemirror/CodeMirror/blob/master/lib/codemirror.css#L3
// ".CodeMirror: The outer element of the editor. This should be used for the editor width, height, borders and positioning. Can also be used to set styles that should hold for everything inside the editor (such as font and font size), or to set a background. Setting this class' height style to auto will make the editor resize to fit its content (it is recommended to also set the viewportMargin option to Infinity when doing this."
.CodeMirror {
    // /* Set height, width, borders, and global font properties here */
    // font-family: monospace;
    // height: 300px;
    // color: black;
    // direction: ltr;
    width: 100%;
    height: 100%;
    overflow: hidden;
    font-size: var(--editor-fontsize);
    line-height: var(--editor-lineheight);
    // background: transparent;
    direction: ltr;
    padding-left: 10px;
}

.CodeMirror[data-language='markdown'] {
    font-family: system-ui;
}

.CodeMirror[data-language='json'],
.CodeMirror[data-language='htmlmixed'] {
    font-family: 'Fira Code';
    font-size: calc(var(--editor-fontsize) - 2px);
    line-height: 1.4em;
}

/* ---------- PADDING ---------- */

// From: https://github.com/codemirror/CodeMirror/blob/master/lib/codemirror.css#L11
// Unmodified

.CodeMirror-lines {
    // Make empty space on sides of the editor selectable by 1) setting width
    // of lines, and 2) centering the lines with horizontal margin `auto`.
    // Crop the text selections (which are too wide), by setting `overflow: hidden`.

    // Dev-only: Grid for testing vertical rhythm.
    // NOTE: This drifts a bit. By about 0.2px per line,
    // on default font size and line height.
    // We can compensate by reducing height by that much,
    // or using `em` units if we want it to work at all
    // sizes. But it's a dev-only testing thing, so I'm
    // not too worried about it.
    // background:
    //     linear-gradient(black(0.05) 1px, transparent 1px),
    //     linear-gradient(-90deg, black(0.05) 1px, transparent 1px);
    // background-size:
    //     var(--editor-lineheight) var(--editor-lineheight), var(--editor-lineheight) var(--editor-lineheight);

    margin: 1em auto;
    min-width: 22em;
    max-width: calc(var(--editor-maxlinewidth) + var(--editor-leftPadding));
    padding: 0 0 10em; // Add padding to bottom
    overflow: hidden;
}

.CodeMirror[data-language='markdown'] .CodeMirror-lines {
    max-width: calc(var(--editor-maxlinewidth) + var(--editor-leftPadding));
}

.CodeMirror[data-language='json'] .CodeMirror-lines,
.CodeMirror[data-language='htmlmixed'] .CodeMirror-lines {
    max-width: calc(60em + var(--editor-leftPadding));
}

.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
    padding-left: var(--editor-leftPadding); /* Horizontal padding of content */
}

.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
    background-color: white; /* The little square between H and V scrollbars */
}

/* ---------- GUTTER ---------- */

// From: https://github.com/codemirror/CodeMirror/blob/master/lib/codemirror.css#L25
// Modified. Some lines commented out

.CodeMirror-gutters {
    // border-right: 1px solid #ddd;
    // background-color: #f7f7f7;
    white-space: nowrap;
}

.CodeMirror-linenumber {
    padding: 0 3px 0 5px;
    min-width: 20px;
    text-align: right;
    //   color: #999;
    white-space: nowrap;
}

.CodeMirror-guttermarker {
    // color: black;
}

.CodeMirror-guttermarker-subtle {
    // color: #999;
}

/* ---------- CURSOR ---------- */

// Copied from: https://github.com/codemirror/CodeMirror/blob/master/lib/codemirror.css#L44
// Modified (see commented out portions)

.CodeMirror-cursor {
    // border-left: 1px solid black;
    border-left: 1px solid foregroundColor(1);
    border-right: none;
    width: 0;
}

/* Shown when moving in bi-directional text */
.CodeMirror div.CodeMirror-secondarycursor {
    border-left: 1px solid silver;
}

.cm-fat-cursor .CodeMirror-cursor {
    width: auto;
    border: 0 !important;
    background: #7e7;
}

.cm-fat-cursor div.CodeMirror-cursors {
    z-index: 1;
}

.cm-fat-cursor-mark {
    background-color: rgba(20, 255, 20, 0.5);
    -webkit-animation: blink 1.06s steps(1) infinite;
    -moz-animation: blink 1.06s steps(1) infinite;
    animation: blink 1.06s steps(1) infinite;
}

.cm-animate-fat-cursor {
    width: auto;
    border: 0;
    -webkit-animation: blink 1.06s steps(1) infinite;
    -moz-animation: blink 1.06s steps(1) infinite;
    animation: blink 1.06s steps(1) infinite;
    background-color: #7e7;
}

@-moz-keyframes blink {
    0% {
    }
    50% {
        background-color: transparent;
    }
    100% {
    }
}
@-webkit-keyframes blink {
    0% {
    }
    50% {
        background-color: transparent;
    }
    100% {
    }
}
@keyframes blink {
    0% {
    }
    50% {
        background-color: transparent;
    }
    100% {
    }
}

/* ---------- MISCELLANEOUS ---------- */
// From: https://github.com/codemirror/CodeMirror/blob/master/lib/codemirror.css#L142
// Unmodified

.cm-invalidchar {
    color: #f00;
}
.CodeMirror-composing {
    border-bottom: 2px solid;
}

// Default styles for common addons

div.CodeMirror span.CodeMirror-matchingbracket {
    color: #0b0;
}
div.CodeMirror span.CodeMirror-nonmatchingbracket {
    color: #a22;
}
.CodeMirror-matchingtag {
    background: rgba(255, 150, 0, 0.3);
}
.CodeMirror-activeline-background {
    // background: #e8f2ff;
}

/* ---------- STOP ---------- */
// "The rest of this file contains styles related to the mechanics of
//  the editor. You probably shouldn't touch them." - Original CM comment. */
// From: https://github.com/codemirror/CodeMirror/blob/master/lib/codemirror.css#L154

.CodeMirror {
    position: relative;
    overflow: hidden;
    // background: white;
}

.CodeMirror-scroll {
    overflow: scroll !important; /* Things will break if this is overridden */
    /* 50px is the magic margin used to hide the element's real scrollbars */
    /* See overflow: hidden in .CodeMirror */
    margin-right: -50px;
    margin-left: calc(var(--editor-leftPadding) * -1);
    /* Josh 10/2: Disabled this because it was screwing up keeping cursor visible. When auto-scrolling to keep cursor visible, if we were scrolling down page, it wouldn't scroll far enough, and cursor was not visible. By about one line height. */
    /* margin-bottom: -50px;  */
    /* padding-bottom: 50px; */
    height: 100%;
    outline: none; /* Prevent dragging from highlighting the element */
    position: relative;
}
.CodeMirror-sizer {
    position: relative;
    border-right: 50px solid transparent;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
     before actual scrolling happens, thus preventing shaking and
     flickering artifacts. */
.CodeMirror-vscrollbar,
.CodeMirror-hscrollbar,
.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
    position: absolute;
    z-index: 6;
    display: none;
}
.CodeMirror-vscrollbar {
    right: 0;
    top: 0;
    overflow-x: hidden;
    overflow-y: scroll;
}
.CodeMirror-hscrollbar {
    bottom: 0;
    left: 0;
    overflow-y: hidden;
    overflow-x: scroll;
}
.CodeMirror-scrollbar-filler {
    right: 0;
    bottom: 0;
}
.CodeMirror-gutter-filler {
    left: 0;
    bottom: 0;
}

.CodeMirror-gutters {
    position: absolute;
    left: 0;
    top: 0;
    min-height: 100%;
    z-index: 3;
}
.CodeMirror-gutter {
    white-space: normal;
    height: 100%;
    display: inline-block;
    vertical-align: top;
    margin-bottom: -50px;
}
.CodeMirror-gutter-wrapper {
    position: absolute;
    z-index: 4;
    background: none !important;
    border: none !important;
}
.CodeMirror-gutter-background {
    position: absolute;
    top: 0;
    bottom: 0;
    z-index: 4;
}
.CodeMirror-gutter-elt {
    position: absolute;
    cursor: default;
    z-index: 4;
}
.CodeMirror-gutter-wrapper ::selection {
    background-color: transparent;
}
.CodeMirror-gutter-wrapper ::-moz-selection {
    background-color: transparent;
}

.CodeMirror-lines {
    cursor: text;
    min-height: 1px; /* prevents collapsing before first draw */
}
.CodeMirror pre.CodeMirror-line,
.CodeMirror pre.CodeMirror-line-like {
    // Dev-only: A way to see line heights by drawing lines at border.
    // box-shadow: 0 -1px 0 0 rgba(0, 0, 0, 0.1);
    /* Reset some styles that the rest of the page might have set */
    -moz-border-radius: 0;
    -webkit-border-radius: 0;
    border-radius: 0;
    border-width: 0;
    // background: transparent;
    font-family: inherit;
    font-size: inherit;
    margin: 0;
    white-space: pre;
    word-wrap: normal;
    line-height: inherit;
    // color: inherit;
    z-index: 2;
    position: relative;
    overflow: visible;
    -webkit-tap-highlight-color: transparent;
    -webkit-font-variant-ligatures: contextual;
    font-variant-ligatures: contextual;
}
.CodeMirror-wrap pre.CodeMirror-line,
.CodeMirror-wrap pre.CodeMirror-line-like {
    word-wrap: break-word;
    white-space: pre-wrap;
    word-break: normal;
}

.CodeMirror-linebackground {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: 0;
}

.CodeMirror-linewidget {
    position: relative;
    z-index: 2;
    // padding: 0.1px; /* Force widget margins to stay inside of the container */
    padding-left: var(--editor-leftPadding);
}

.CodeMirror-widget {
    z-index: 100;
}

.CodeMirror-rtl pre {
    direction: rtl;
}

.CodeMirror-code {
    outline: none;
}

/* Force content-box sizing for the elements where we expect it */
.CodeMirror-scroll,
.CodeMirror-sizer,
.CodeMirror-gutter,
.CodeMirror-gutters,
.CodeMirror-linenumber {
    -moz-box-sizing: content-box;
    box-sizing: content-box;
}

.CodeMirror-measure {
    position: absolute;
    width: 100%;
    height: 0;
    overflow: hidden;
    visibility: hidden;
}

.CodeMirror-cursor {
    position: absolute;
    pointer-events: none;
}
.CodeMirror-measure pre {
    position: static;
}

div.CodeMirror-cursors {
    visibility: hidden;
    position: relative;
    z-index: 3;
}
div.CodeMirror-dragcursors {
    visibility: visible;
}

.CodeMirror-focused div.CodeMirror-cursors {
    visibility: visible;
}

// Text selected: CodeMirror NOT focused
:not(.CodeMirror-focused) .CodeMirror-selected {
    background: #d9d9d9;
    // max-width: 100%; // Feb 11: Am attempting to fix issue where .CodeMirror-selected div is too wide, and extends off to right.
}

// Text selected: CodeMirror focused
.CodeMirror-focused .CodeMirror-selected {
    // background: #d7d4f0;
    background: var(--selected-text-background); // TODO
}
.CodeMirror-crosshair {
    // Am disabling showing cross hair when alt is held
    cursor: text;
    // cursor: crosshair;
}
.CodeMirror-line::selection,
.CodeMirror-line > span::selection,
.CodeMirror-line > span > span::selection {
    background: var(--selected-text-background);
}
.CodeMirror-line::-moz-selection,
.CodeMirror-line > span::-moz-selection,
.CodeMirror-line > span > span::-moz-selection {
    background: #00ffe1;
}

.cm-searching {
    background-color: #ffa;
    background-color: rgba(255, 255, 0, 0.4);
}

/* Used to force a border model for a node */
.cm-force-border {
    padding-right: 0.1px;
}

@media print {
    /* Hide the cursor when printing */
    .CodeMirror div.CodeMirror-cursors {
        visibility: hidden;
    }
}

/* See issue #2901 */
.cm-tab-wrap-hack:after {
    content: '';
}

/* Help users use markselection to safely style text background */
span.CodeMirror-selectedtext {
    background: none;
}
