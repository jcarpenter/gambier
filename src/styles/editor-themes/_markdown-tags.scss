@use "../_helpers/colors" as *;
@use "../_helpers/mediaqueries" as *;
@use "../_helpers/typography" as *;
@use "../_helpers/reset" as *;
@use "../_helpers/layout" as *;
@use "sass:color";

// .CodeMirror-lines {
//   border-left: 1px solid black(0.05);
//   border-right: 1px solid black(0.05);
//   background: linear-gradient(-90deg, black(0.025) 1px, transparent 1px),
//     linear-gradient(-90deg, black(0.05) 1px, transparent 1px);
//   background-size: 1em, 2em;
// }

// -------------- Marks (shared) -------------- //

.mark:focus {
  outline: none;
}

// Hide text selection when mark is not focused
.mark:not(:focus)::selection {
  background-color: transparent;
}

.mark:not(.editable) {
  cursor: initial;

  &::before {
    justify-content: center;
    display: inline-flex;
    width: 1em;
    overflow: hidden;
  }
}

// -------------- Blockquote -------------- //

pre.CodeMirror-line.quote {
  color: var(--quote);
  // font-style: italic;
  // Creating hanging indentation for >
  // text-indent: -1em;
  // Make hanging > align with side of page
  padding-left: calc(var(--editor-leftPadding) + var(--quote-indent));

  .cm-quote-start {
    color: var(--quote-md);
    // display: inline-block;
    // width: var(--quote-indent);
    position: absolute;
    transform: translate(-100%, 0);
    // margin-left: calc(var(--quote-indent) * -1);
  }

  &::before {
    content: '';
    height: 100%;
    position: absolute;
    width: var(--quote-border-width);
    left: 0;
    background: var(--quote-border-bg);
    // border-radius: 1em;
  }
}

// -------------- Citation -------------- //

// .mark.citation {
//   color: var(--citation-mark);
//   background-color: var(--citation-mark-bg);
//   border: 1px solid var(--citation-mark-border);
//   border-radius: var(--mark-borderRadius);
//   font-weight: normal;

//   &:before {
//     content: 'c';
//   }

//   &.highlighted {
//     color: var(--citation-mark-highlight);
//     background-color: var(--citation-mark-highlight-bg);
//     border-color: var(--citation-mark-highlight-bg);
//   }
// }

.mark.citation {
  background-color: hsla(0, 0%, 77%, 1);
  border-radius: 2px;

  &:before {
    @include centered-mask-image;
    content: '';
    width: 1em;
    height: 1em;
    transform: translate(0, 0.5px);
    -webkit-mask-size: 10px;
    -webkit-mask-image: url(/img/citation-icon-1.svg);
    background: rgba(0, 0, 0, 0.7);
  }

  &.highlighted {
    color: var(--footnote-mark-highlight);
    background-color: var(--footnote-mark-highlight-bg);
    border-color: var(--footnote-mark-highlight-bg);
  }
}

.cm-citation {
  color: var(--citation-source);
  background-color: var(--citation-source-bg);

  &.cm-key {
    text-decoration: underline;
    // color: black;
  }

  &.cm-md {
    color: var(--citation-source-md);
  }
}

// .citation {
//   color: var(--citation);
//   background-color: var(--citationBG);
//   border: 1px solid rgba(0, 0, 0, 0.1);
// }

// -------------- Code -------------- //

.CodeMirror-line:not(.fencedcodeblock) .cm-code {
  @include code-typography;
  line-height: 0;
  color: var(--code-source);
  background-color: var(--code-source-bg);
  // We use border to add some top and bottom padding
  padding: 2px 0;
  // border-top: 2px solid transparent;
  // border-bottom: 2px solid transparent;
  // line-height: var(--editor-lineheight) !important;
  // padding: 0.1em 0 0.2em;

  &.cm-md {
    color: var(--code-source-md);
  }

  &.cm-code-start {
    border-radius: var(--code-borderRadius) 0 0 var(--code-borderRadius);
  }

  &.cm-code-end {
    border-radius: 0 var(--code-borderRadius) var(--code-borderRadius) 0;
  }
}

// -------------- Emphasis -------------- //

.cm-emphasis {
  color: var(--emphasis);
  font-style: italic;
  &.cm-md {
    color: var(--emphasis-md);
  }
}

// -------------- Fenced code block and TeXMath -------------- //

// pre.CodeMirror-line.texmath-display {
//   @include code-typography;
//   background-color: var(--texmath-display);
// }


.cm-texmath-inline {
  @include code-typography;
  background-color: var(--texmath-inline);
}
pre.CodeMirror-line.fencedcodeblock,
pre.CodeMirror-line.texmath-display {
  & > [role='presentation'] {
    @include code-typography;
    line-height: var(--editor-lineheight);
    display: block;
    background: var(--fencedcodeblock-bg);
    padding: 0 0.25em;
  }

  .cm-md {
    color: var(--fencedcodeblock-md);
  }

  &.fencedcodeblock-start > [role='presentation'] {
    border-radius: var(--fencedcodeblock-borderRadius) var(--fencedcodeblock-borderRadius) 0 0;
    // padding: 0 0.2em;
  }

  &.fencedcodeblock-end > [role='presentation'] {
    border-radius: 0 0 var(--fencedcodeblock-borderRadius) var(--fencedcodeblock-borderRadius);
    // padding: 0 0.2em;
  }
}

// -------------- Figure -------------- //

.editor:not(.sourceMode) .CodeMirror-line.figure {
  background-color: var(--figure-bg);
  // max-height: 6em;
  height: auto;
  // We have to set line-height to zero or we get extra
  // padding at bottom of this line.
  line-height: 0;

  .CodeMirror-widget {
    height: 100%;
    display: grid;
    grid-gap: 1em;
    grid-template-columns: 8em 1fr;
    grid-template-rows: 6em;
    line-height: var(--editor-lineheight);

    .thumb {
      grid-column: 1;
      width: 100%;
      height: auto;
      cursor: default;
      overflow: hidden;
      background-color: var(--figure-thumb-bg);
      border-radius: var(--figure-thumb-borderRadius);
      border-width: var(--figure-thumb-borderWidth);
      border-style: solid;
      border-color: var(--figure-thumb-borderColor);
      // padding: 3px;
    }

    .caption {
      font-size: 0.9em;
      letter-spacing: -0.01em;
      line-height: calc(var(--editor-lineheight) - 0.1em);
      // font-style: italic;
      grid-column: 2;
      overflow-x: hidden;
      overflow-y: scroll;
      color: var(--figure-caption);
    }
  }

  .blank::before {
    content: 'Caption';
    opacity: 0;
    transition: opacity 0.2s ease-out 0s;
  }

  .blank:hover {
    &::before {
      opacity: 0.5;
      transition: opacity 0.2s ease-in 0.1s;
    }
  }
}

// -------------- Footnote -------------- //

// Mark

// .mark.footnote {
//   color: var(--footnote-mark);
//   background-color: var(--footnote-mark-bg);
//   border: 1px solid var(--footnote-mark-border);
//   border-radius: var(--mark-borderRadius);
//   font-weight: normal;

//   &:before {
//     content: 'f';
//   }

//   &.highlighted {
//     color: var(--footnote-mark-highlight);
//     background-color: var(--footnote-mark-highlight-bg);
//     border-color: var(--footnote-mark-highlight-bg);
//   }
// }

.mark.footnote {
  background-color: hsla(0, 0%, 77%, 1);
  border-radius: 2px;

  &:before {
    @include centered-mask-image;
    content: '';
    width: 1em;
    height: 1em;
    // width: 100%;
    // height: 100%;
    // transform: translate(0, 0.5px);
    -webkit-mask-size: 10px;
    -webkit-mask-image: url(/img/footnote-icon-1.svg);
    background: rgba(0, 0, 0, 0.7);
  }

  &.highlighted {
    color: var(--footnote-mark-highlight);
    background-color: var(--footnote-mark-highlight-bg);
    border-color: var(--footnote-mark-highlight-bg);
  }
}

.mark.cm-footnote:not(.reference) {
  // padding-right: 0.3em;
}

// Source

.cm-footnote {
  color: var(--footnote-source);
  background-color: var(--footnote-source-bg);
  &.cm-md {
    color: var(--footnote-source-md);
  }
}

// Reference definition

.CodeMirror-line.footnote-reference-definition,
.CodeMirror-line.footnote-reference-definition-continued {
  background-color: rgba(241, 186, 231, 0.2) !important; // TODO
  font-style: italic !important;
}

// -------------- Frontmatter -------------- //

// Padding of rows

:not(.fencedcodeblock) {

  pre.CodeMirror-line.frontmatter {
    padding-top: 0.3em;
    padding-bottom: 0.2em;
    padding-right: 0.5em;
    padding-left: calc(var(--editor-leftPadding) + 0.35em);
  }
 
  pre.CodeMirror-line.frontmatter.list-start {
    // padding-bottom: 0;
  }

  pre.CodeMirror-line.frontmatter.list {
    padding-top: 0;
    padding-bottom: 0;
  }
  
  pre.CodeMirror-line.frontmatter.list-end {
    padding-top: 0;
  }

  // Remove top padding from first line after -start
  // pre.CodeMirror-line.frontmatter-start + 
  // pre.CodeMirror-line.frontmatter {
  //   padding-top: 0.1em;
  // }

  // Remove bottom padding from last line before -end
  // TODO
}

// Font size and line heights

pre.CodeMirror-line.frontmatter {
  line-height: 1em;
}

pre.CodeMirror-line.frontmatter > [role='presentation'] {
  font-size: 0.9em;
  line-height: 1.5em;
}

// Visible borders and backgrounds:
// Are created with ::before psuedo elements 

.frontmatter::before {
  content: '';
  pointer-events: none;
  display: block;
  position: absolute;
  height: 100%;
  background-color: var(--frontmatter-bg);
  width: calc(var(--editor-maxlinewidth) - var(--frontmatter-border-width) - var(--frontmatter-border-width));
  top: 0;
  left: var(--editor-leftPadding);
  padding: 0;
  border-left: var(--frontmatter-border-width) solid var(--frontmatter-border);
  border-right: var(--frontmatter-border-width) solid var(--frontmatter-border);
  transition: border-color 0.1s ease-out;
  box-sizing: border-box;
}

.frontmatter:not(.frontmatter-start, .list, .list-end)::before {
  border-top: 1px dotted var(--frontmatter-dividers);
}

.frontmatter-start::before {
  border-top: var(--frontmatter-border-width) solid var(--frontmatter-border);
  border-radius: var(--frontmatter-borderRadius) var(--frontmatter-borderRadius) 0 0;
}

.frontmatter-end::before {
  border-bottom: var(--frontmatter-border-width) solid var(--frontmatter-border);
  border-radius: 0 0 var(--frontmatter-borderRadius) var(--frontmatter-borderRadius); 
}

// Text styling:

.frontmatter .cm-md {
  color: var(--frontmatter-md);
  letter-spacing: 0.1em;
}

.frontmatter .cm-null {
  color: foregroundColor(1);
}

.frontmatter .cm-string {
  color: foregroundColor(1);
  // color: accent($light: -30%, $sat: -30%);
}

.frontmatter .cm-def:not(.cm-md) {
  color: hsla(0, 0%, 0%, 0.25);
}

.frontmatter .cm-atom {
  text-transform: uppercase;
  // color: foregroundColor(0.8);
  color: accent($light: -40%, $alpha: 0.5);
  // background-color: foregroundColor(0.1);
  background-color: accent($light: -20%, $alpha: 0.1);
  font-weight: 500;
  font-size: 0.8em;
  letter-spacing: 0.01em;
  padding: 0.1em 0.4em;
  text-shadow: 0 1px backgroundColor(0.1);
  border-radius: 0.2em;
}

.frontmatter .cm-keyword {
  // font-weight: 600;
  color: accent($light: -10%, $sat: -10%);
}

.frontmatter .cm-number {
  color: accent($light: -10%, $sat: -10%);
}

// Remove gap and divider from consecutive comments
pre.CodeMirror-line.frontmatter.comment +
pre.CodeMirror-line.frontmatter.comment {
  padding-top: 0;
  // background: red;
  &::before {
    border-top: none;
  }
}

pre.CodeMirror-line.frontmatter:not(.fencedcodeblock) .cm-comment {
  color: accent($light: -30%, $sat: -30%, $alpha: 0.4);
  font-style: italic;
}

// Tags: Dark buttons
// .frontmatter .cm-tag {
//   text-transform: uppercase;
//   color: backgroundColor(1);
//   font-weight: 500;
//   opacity: 0.7;
//   letter-spacing: 0.01em;
//   background-color: foregroundColor(0.8);
//   padding: 0.1em 0.2em;
//   text-shadow: 0 1px backgroundColor(0.1);
//   border-radius: 2px;
//   font-size: 0.9em;
// }

// Tags: underline
.frontmatter .cm-tag {
  color: foregroundColor(1);
  text-decoration: underline;
  text-decoration-thickness: 1px;
  text-decoration-color: foregroundColor(0.5);
}

.metaKeyDown .frontmatter .cm-tag:hover {
  text-decoration-color: foregroundColor(1);
  cursor: pointer;
} 

// Collapsed
// When collapsed, all rows of the frontmatter are replaced by a 
// TextMarker, and both -start and -end classes are applied to the
// remaining parent row.

pre.CodeMirror-line.frontmatter-start {
  z-index: 10;
}

.frontmatter-start.frontmatter-end {
  cursor: initial;
  &::before {
    border-radius: var(--frontmatter-borderRadius);
  }
  &:hover {
    // .collapseButton {
    //   opacity: 1;
    // }
    // &::before {
    //   border-color: var(--frontmatter-collapsed-border-hover);
    //   transition: border-color 0.1s ease-in;
    // }
    // .cm-md {
    //   color: var(--frontmatter-collapsed-border-hover);
    // }
  }
}

// -------------- Headers -------------- //

.CodeMirror-line.header {
  &.h1 {
    color: var(--h1);
    font-weight: 700;
    [role='presentation'] {
      border-bottom: 2px solid black;
    }
    .cm-header-start {
      opacity: 0.75;
    }
  }

  &.h2 {
    color: var(--h2);
    font-weight: 700;
    .cm-header-start {
      opacity: 0.3;
    }
  }

  &.h3 {
    color: var(--h3);
    font-weight: 700;
    .cm-header-start {
      opacity: 0.3;
    }
  }

  &.h4 {
    color: var(--h4);
    font-style: italic;
    .cm-header-start {
      opacity: 0.3;
    }
  }

  &.h5 {
    color: var(--h5);
    .cm-header-start {
      opacity: 0.3;
    }
  }

  &.h6 {
    color: var(--h6);
    .cm-header-start {
      opacity: 0.3;
    }
  }
}

.cm-header-start {
  position: absolute;
  transform: translate(-100%, 0);
  font-weight: normal;
}

// -------------- Horizontal rule -------------- //

.CodeMirror-line.hr {
  background-color: var(--hr-bg);
}

// -------------- Image -------------- //

// .CodeMirror-line:not(.figure) .mark.image {
//   color: var(--image-mark);
//   background-color: var(--image-mark-bg);
//   border: 1px solid var(--image-mark-border);
//   border-radius: var(--mark-borderRadius);

//   &::before {
//     content: 'i';
//   }

//   &.highlighted {
//     color: var(--image-mark-highlight);
//     background-color: var(--image-mark-highlight-bg);
//     border-color: var(--image-mark-highlight-bg);
//   }
// }

.CodeMirror-line:not(.figure) .mark.image {
  background-color: hsla(0, 0%, 77%, 1);
  border-radius: 2px;

  &:before {
    @include centered-mask-image;
    content: '';
    width: 1em;
    height: 1em;
    transform: translate(0, 0.5px);
    -webkit-mask-size: 10px;
    -webkit-mask-image: url(/img/img-icon-1.svg);
    background: rgba(0, 0, 0, 0.7);
  }

  &.highlighted {
    color: var(--footnote-mark-highlight);
    background-color: var(--footnote-mark-highlight-bg);
    border-color: var(--footnote-mark-highlight-bg);
  }
}

.cm-image {
  color: var(--image-source);
  background-color: var(--image-source-bg);

  &.cm-url {
    color: var(--image-source-url);
    text-decoration: underline;
    text-decoration-skip: edges;
    word-break: break-all;
  }

  &.cm-title {
    color: var(--image-source-title);
    // font-style: italic;
  }

  &.cm-md {
    color: var(--image-source-md);
  }
}

// -------------- Incomplete -------------- //

.cm-incomplete {
  border-bottom: 2px solid salmon;
}

// -------------- Indentation -------------- //

.cm-indent {
  // letter-spacing: 0.25em;
  // display: none;
  // float: left;
}

// -------------- Link -------------- //

// Mark

.mark.link {
  color: var(--link-mark);

  // Pill
  background-color: var(--link-mark-bg);
  border: var(--link-mark-border-width) solid var(--link-mark-border);
  border-radius: var(--link-mark-borderRadius);
  font-weight: normal;
  padding: 0 0.2em;
  position: relative;

  // box-shadow: 1px 1px 0 0 var(--link-mark-border);

  // &::before,
  // &::after {
  //   content: ' ';
  // }

  // Traditional underline
  // text-decoration: underline;
  // text-decoration-thickness: 0.1em;
  // text-underline-offset: 0em;
  // text-decoration-color: inherit;
  // text-decoration-color: #{color.adjust($link, $alpha: -0.7)};
  // text-decoration-skip-ink: none;

  // Square brackets wrap
  // &::before {
  //   content: '[';
  //   opacity: 0.5;
  // }
  // &::after {
  //   content: ']';
  //   opacity: 0.5;
  //  }

  // Marker underline
  // background-image: linear-gradient(to right, #f9dd94 0%, #f9dd94 100%);
  // background-repeat: repeat-x;
  // background-position: 0 100%;
  // background-size: 100% 6px;

  // &::after {
  //   content: '';
  //   position: absolute;
  //   width: 100%;
  //   height: 8px;
  //   left: 0;
  //   bottom: -2px;
  //   display: inline-block;
  //   background-color: var(--link-mark-border);
  // }

  &.highlighted {
    color: var(--link-mark-highlight);
    background-color: var(--link-mark-highlight-bg);
    border-color: var(--link-mark-highlight-bg);
  }
}

.metaKeyDown .mark.link:hover {
  cursor: pointer;
}

// Source

.cm-link,
.cm-autolink-url,
.cm-autolink-email {
  color: var(--link-source);
  background-color: var(--link-source-bg);
  text-decoration: none;

  &.cm-url {
    color: var(--link-source-url);
    text-decoration: underline;
    text-decoration-skip: edges;
    opacity: 0.8;
    word-break: break-all;

    &:hover {
      opacity: 1;
    }
  }

  &.cm-title {
    color: var(--link-source-title);
    // font-style: italic;
  }

  &.cm-md {
    color: var(--link-source-md);
  }
}

.cm-reference.cm-label {
  font-weight: bold;
  &.mark {
    font-weight: normal;
  }
}

// Line

.CodeMirror-line.link-reference-definition {
  background-color: var(--link-ref-definition-bg);
  font-style: italic !important;
}

// -------------- Lists -------------- //

// Indent is same between ul and ol
// Marker is where they differ.
// UL marker width is alwys consistent. But OL varies.
// Needs to be right aligned, and expand in size to left.

.cm-list-marker {
  color: var(--list-marker);
}

// UL

pre.CodeMirror-line.ul {
  .cm-indent {
    letter-spacing: 0.2325em;
  }
  .cm-list-marker {
    letter-spacing: 0.1em;
  }
}

pre.CodeMirror-line.ol {
  .cm-indent {
    letter-spacing: 0.23em;
  }
  .cm-list-marker {
    display: inline-block;
    text-align: right;
    width: 1em;
  }
}

pre.CodeMirror-line.list-1 {
  text-indent: -1em;
  padding-left: calc(var(--editor-leftPadding) + 2em);
}

pre.CodeMirror-line.list-2 {
  text-indent: -3em;
  padding-left: calc(var(--editor-leftPadding) + 4em);
}

pre.CodeMirror-line.list-3 {
  text-indent: -5em;
  padding-left: calc(var(--editor-leftPadding) + 6em);
}

pre.CodeMirror-line.list-4 {
  text-indent: -7em;
  padding-left: calc(var(--editor-leftPadding) + 8em);
}

pre.CodeMirror-line.list-5 {
  text-indent: -9em;
  padding-left: calc(var(--editor-leftPadding) + 10em);
}

pre.CodeMirror-line.list-6 {
  text-indent: -11em;
  padding-left: calc(var(--editor-leftPadding) + 12em);
}

// -------------- Strikethrough -------------- //

.cm-strikethrough {
  color: var(--strikethrough);
  // text-decoration: line-through;
  background: linear-gradient(transparent 55%, hsla(0, 0%, 0%, 0.5) 55% 60%, transparent 60%);

  &.cm-md {
    text-decoration: none;
    color: var(--strikethrough-md);
    background: none;
  }
}

// -------------- Strong -------------- //

.cm-strong {
  color: var(--strong);
  font-weight: 700;
  &.cm-md {
    color: var(--strong-md);
  }
}

// -------------- Task List -------------- //

.taskList .cm-task {
  // @include code-typography;
}

.taskList .cm-md:first-of-type {
  // background: red;
}

.taskList .cm-task {
  // border-bottom: 2px solid turquoise;
}

.mark.task {
  @include button-reset; // We use a button element
  background-color: var(--task-mark-bg);
  border: 1px solid var(--task-mark-border);
  border-radius: var(--mark-borderRadius);
  font-weight: normal;
  width: 1.2em;
  height: 1.2em;
  margin: 0 0.35em 0 0;
  transform: translate(0, 0.2em);

  &:before {
    @include centered-mask-image;
    content: '';
    width: 100%;
    height: 100%;
    // transform: translate(0, 0.5px);
    -webkit-mask-size: 10px;
    -webkit-mask-image: var(--task-mark-icon);
    background: var(--task-mark-icon-bg);
  }

  &:not(.closed) {
    background-color: var(--task-mark-open-bg);
    border-color: var(--task-mark-open-border);
    &::before {
      opacity: 0;
    }
  }

  &.closed {
    background-color: var(--task-mark-closed-bg);
    border-color: var(--task-mark-closed-border);
    &::before {
      opacity: 1;
    }
  }

  // &.highlighted {
  //   color: var(--task-mark-highlight);
  //   background-color: var(--task-mark-highlight-bg);
  //   border-color: var(--task-mark-highlight-bg);
  // }
}

// .mark.test {
//   display: inline-block;
//   // place-items: center;
//   // border: 1px solid red;
//   // box-shadow: inset 0 0 0 1px red;
//   width: 1em;
//   margin: 0;
//   padding: 0;
//   height: var(--editor-lineheight);
//   // height: 100%;
//   background: rgba(255, 0, 100, 0.4);
//   position: relative;
// }

// .mark.task {
//   // @include button-reset;

//   // display: inline-flex;
//   // place-items: center;
//   // transform: translate(0, 2px);
//   display: inline-block;
//   width: 100%;
//   height: 14px;
//   // position: absolute;
//   // top: 0;
//   // left: 0;
//   opacity: 0.5;

//   // &::before {
//   //   @include centered-mask-image;
//   //   opacity: 0;
//   //   content: '';
//   //   width: 100%;
//   //   height: 100%;
//   //   transform: translate(0, 0.5px);
//   //   -webkit-mask-size: 10px;
//   //   -webkit-mask-image: var(--img-checkmark-heavy);
//   //   background: red;
//   // }

//   // margin: 0 0.5em 0 0;
//   // width: 1em;
//   // height: 1em;
//   // border-radius: 0.1em;

//   // display: inline-block;
//   // &::after {
//   //   content: ' ';
//   // }

// }

// -------------- URL-in-Brackets -------------- //
// -------------- Email-in-Brackets -------------- //

.cm-bare-url,
.cm-emphasisail-in-brackets,
.cm-url-in-brackets {
  color: var(--in-brackets);
  &.cm-md {
    color: var(--in-brackets-md);
  }
}

.metaKeyDown {
  .cm-link.cm-url:hover {
    cursor: pointer;
  }
  .cm-bare-url:hover,
  .cm-email-in-brackets:not(.cm-email-in-brackets-start, .cm-email-in-brackets-end):hover,
  .cm-url-in-brackets:not(.cm-url-in-brackets-start, .cm-url-in-brackets-end):hover {
    // text-decoration: underline;
    border-bottom: 1px solid var(--in-brackets);
    cursor: pointer;
  }
}
